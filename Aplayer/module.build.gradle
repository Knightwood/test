if (asMoudle_notAloneApp.toBoolean()) {
    //作为组件被app依赖
    apply plugin: 'com.android.library'
} else {
    //作为独立App应用运行
    apply plugin: 'com.android.application'
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        consumerProguardFiles 'consumer-rules.pro'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            //jni库统一放在libs目录下
//            jniLibs.srcDir = ['libs']
            if (asMoudle_notAloneApp.toBoolean()) {
                //合并到宿主中
                manifest.srcFile 'src/main/AndroidManifest.xml'
                resources {
                    //正式版本时.剔除debug文件夹下的所有调式文件
                    exclude 'src/debug/*'
                }
            } else {
                //单独运行
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            }
        }
    }
    //开启dataBinding
    dataBinding {
        enabled true
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

}